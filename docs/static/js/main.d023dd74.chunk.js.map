{"version":3,"sources":["components/AddCategory.jsx","components/GIFGridItem.jsx","components/helpers/fetchGIFS.js","components/GIFGrid.jsx","hooks/useFetchGIFS.js","GIFExpertApp/GIFExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleInputChange","event","target","value","onSubmit","e","preventDefault","trim","length","categories","type","onChange","onAbort","GIFGridItem","id","title","url","className","src","alt","fetchGIFS","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","images","downsized_medium","GIFGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGIFS","image","key","GIFExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAG1CC,EAAoB,SAACC,GACzBF,EAAcE,EAAMC,OAAOC,QAY7B,OACE,oCACE,0BAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEER,EAAWS,OAAOC,OAAS,IAC7BZ,GAAc,SAACa,GAAD,OAAiBX,GAAjB,mBAAgCW,OAC9CV,EAAc,OAOZ,2BACEW,KAAK,OACLP,MAAOL,EACPa,SAAUX,EACVY,QAASZ,OCxBNa,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAS,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACjBN,EADiB,iDAC+BO,UACpDF,GAFqB,+DAIJG,MAAMR,GAJF,cAIjBS,EAJiB,gBAKAA,EAAKC,OALL,uBAKfC,EALe,EAKfA,KACFC,EAAQD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVd,kBAahBY,GAbgB,4CAAH,sDCITK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdxB,mBAAS,CACjC8B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRjB,EAAUC,GAAUiB,MAAK,SAACP,GACxBQ,YAAW,WACTH,EAAS,CACPT,KAAMI,EACNG,SAAS,MAEV,UAEJ,CAACb,IAEGc,EDf2BK,CAAanB,GAAjCU,EADyB,EAC/BJ,KAAcO,EADiB,EACjBA,QAEtB,OACE,oCACE,4BAAKb,GACL,4BAAKa,EAAU,WAAa,WAC5B,yBAAKjB,UAAU,aACZc,EAAOF,KAAI,SAACY,GACX,OAAO,kBAAC,EAAD,eAAaC,IAAKD,EAAM3B,IAAQ2B,UETpCE,EAAe,WAAO,IAAD,EACI9C,mBAAS,CAAC,kBADd,mBACzBY,EADyB,KACbb,EADa,KAGhC,OACE,oCACE,8CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BACGa,EAAWoB,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASA,SAAUA,EAAUqB,IAAKrB,UCT5CuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d023dd74.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 1) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onAbort={handleInputChange}\n        />\n      </form>\n    </>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport const GIFGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title}></img>\n      <p>{title}</p>\n    </div>\n  );\n};\n","export const fetchGIFS = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=5T63lTAhW1ln5rHNTEta5BYG9A53tTIs`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifts = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    };\n  });\n  return gifts;\n};\n","import React from 'react';\nimport { GIFGridItem } from './GIFGridItem';\nimport { useFetchGIFS } from '../hooks/useFetchGIFS';\n\nexport const GIFGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGIFS(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      <h4>{loading ? 'Cargando' : 'Cargado'}</h4>\n      <div className=\"card-grid\">\n        {images.map((image) => {\n          return <GIFGridItem key={image.id} {...image}></GIFGridItem>;\n        })}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchGIFS } from '../components/helpers/fetchGIFS';\n\nexport const useFetchGIFS = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    fetchGIFS(category).then((images) => {\n      setTimeout(() => {\n        setState({\n          data: images,\n          loading: false,\n        });\n      }, 3000);\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from '../components/AddCategory';\nimport { GIFGrid } from '../components/GIFGrid';\n\nexport const GIFExpertApp = () => {\n  const [categories, setCategories] = useState(['One Punch Man']);\n\n  return (\n    <>\n      <h2>GIF Expert App</h2>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n      <ul>\n        {categories.map((category) => (\n          <GIFGrid category={category} key={category}></GIFGrid>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GIFExpertApp } from './GIFExpertApp/GIFExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GIFExpertApp></GIFExpertApp>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}